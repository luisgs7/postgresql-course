/*USE DB*/

USE course;

/*CREATE TABLE*/

CREATE TABLE FUN(
	FUNNUN INT,
	NOME VARCHAR(255),
	CARGO VARCHAR(255),
	MGR INT,
	CONTRATACAO DATE,
	SALARIO INT,
	COMISSAO INT,
	DEPTNUM INT
);


SELECT * FROM FUN;

/*INSERT */

INSERT INTO FUN VALUES(
	8369, 'SILVIA', 'ATENDENTE', 7902, '1980-12-17', 800, NULL, 20
);

INSERT INTO FUN VALUES(
	9499, 'ALAN', 'VENDEDOR', 7698, '1981-02-20', 1600, 300, 30
);

INSERT INTO FUN VALUES(
	6521, 'WALDIR', 'VENDEDOR', 7698, '1981-02-22', 1250, 500, 30
);

INSERT INTO FUN VALUES(
	9499, 'PEDRO', 'VENDEDOR', 7698, '1981-04-02', 800, 0, 20
);

/*SELECT*/

SELECT DEPTNUM, CARGO, SALARIO FROM FUN;

SELECT * FROM FUN WHERE DEPTNUM = 20;

SELECT NOME, CARGO FROM FUN WHERE DEPTNUM = 20;

SELECT * FROM FUN WHERE DEPTNUM = 10 OR
						COMISSAO IS NOT NULL OR
						SALARIO <= 2000 AND DEPTNUM = 20;

SELECT * FROM FUN WHERE (DEPTNUM = 10 OR  /*Bloco de código organizado por ( )*/
						COMISSAO IS NOT NULL OR
						SALARIO <= 2000) 
						AND DEPTNUM = 20;


SELECT SALARIO AS GANHOS, COMISSAO AS BONUS FROM FUN;


SELECT SALARIO AS GANHOS, COMISSAO AS BONUS FROM FUN WHERE COMISSAO < 5000;


SELECT * FROM (SELECT SALARIO AS GANHOS, COMISSAO AS BONUS FROM FUN) X WHERE GANHOS < 5000;


SELECT * FROM (SELECT SALARIO AS GANHOS, COMISSAO AS BONUS FROM FUN) X WHERE BONUS < 5000;


SELECT CONCAT(NOME,' CARGO as C ', CARGO) AS MSG FROM FUN WHERE DEPTNUM = 20;


SELECT NOME, SALARIO, CASE WHEN SALARIO <= 1000 THEN 'BAIXO' WHEN SALARIO >= 2000 THEN 'ALTO' ELSE 'MEDIO' END AS RESULTADO FROM FUN;


SELECT * FROM FUN LIMIT 2;


SELECT NOME, CARGO FROM FUN ORDER BY RAND() LIMIT 3;


SELECT NOME, CARGO FROM FUN ORDER BY NOME LIMIT 3;


SELECT NOME, COMISSAO FROM FUN WHERE COMISSAO IS NOT NULL;


SELECT NOME, COMISSAO FROM FUN WHERE COMISSAO IS NULL;


SELECT COALESCE(COMISSAO, 0) FROM FUN;


SELECT NOME, CARGO, COALESCE(COMISSAO, 0) FROM FUN WHERE COMISSAO IS NULL;


SELECT NOME, CARGO, COALESCE(COMISSAO, 'ZERO') FROM FUN WHERE COMISSAO IS NULL;


SELECT NOME, CARGO, COALESCE(COMISSAO, 'ZERO') FROM FUN WHERE COMISSAO IS NULL ORDER BY NOME DESC;


SELECT NOME, CARGO, SALARIO FROM FUN WHERE DEPTNUM = 20 ORDER BY SALARIO ASC;


SELECT NOME, CARGO, SALARIO FROM FUN WHERE DEPTNUM = 20 ORDER BY SALARIO DESC;


SELECT NOME, CARGO, SALARIO FROM FUN WHERE DEPTNUM = 20 ORDER BY 2 DESC;


SELECT FUNNUN, DEPTNUM, SALARIO, NOME, CARGO FROM FUN ORDER BY 5 DESC;


SELECT FUNNUN, DEPTNUM, SALARIO, NOME, CARGO FROM FUN ORDER BY 5 ASC;


SELECT NOME, SALARIO, COMISSAO FROM (SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN) X ORDER BY IS_NULL DESC, COMISSAO;


SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN;


SELECT NOME, SALARIO, COMISSAO FROM (SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN) X ORDER BY IS_NULL DESC, COMISSAO DESC;


SELECT NOME, SALARIO, COMISSAO FROM (SELECT NOME, SALARIO, COMISSAO, CASE WHEN COMISSAO IS NULL THEN 0 ELSE 1 END AS IS_NULL FROM FUN) X ORDER BY IS_NULL, COMISSAO DESC;


SELECT NOME, DEPTNUM FROM FUN WHERE DEPTNUM = 20 UNION ALL SELECT '-------', NULL FROM TABELA1 UNION ALL SELECT NOME, DEPTNUM FROM AREA;


SELECT DEPTNUM FROM FUN UNION ALL SELECT DEPTNUM FROM AREA;


SELECT DEPTNUM FROM FUN UNION SELECT DEPTNUM FROM AREA;


SELECT f.NOME, a.CIDADE FROM FUN f, AREA a;


SELECT f.NOME, a.CIDADE FROM FUN f, AREA a WHERE f.DEPTNUM = a.DEPTNUM AND f.DEPTNUM = 20;


SELECT f.NOME, a.CIDADE, f.DEPTNUM AS FUN_DEPTNUM, a.DEPTNUM AS AREA_DEPTNUM FROM FUN f, AREA a WHERE f.DEPTNUM = 20;


SELECT DEPTNUM FROM AREA WHERE DEPTNUM NOT IN (SELECT DEPTNUM FROM FUN);


SELECT DISTINCT DEPTNUM FROM AREA WHERE DEPTNUM NOT IN (SELECT DEPTNUM FROM FUN);


SELECT f.NOME, a.CIDADE FROM FUN f, AREA a WHERE f.DEPTNUM = 20 AND  a.DEPTNUM = f.DEPTNUM;


SELECT NOME, COMISSAO, COALESCE(COMISSAO,0) FROM FUN WHERE COALESCE(COMISSAO,0)< (SELECT COMISSAO FROM FUN WHERE NOME='WALDIR');


/* SELECT STRINGS */
 
SELECT NOME, iter.POSICAO FROM (SELECT NOME FROM FUN WHERE NOME='SILVIA') e, (SELECT id as POSICAO FROM TABELA1) iter;


SELECT NOME, iter.POSICAO FROM (SELECT NOME FROM FUN WHERE NOME = 'JOAO') e, (SELECT id AS POSICAO FROM TABELA10) iter WHERE iter.POSICAO <= length(e.NOME);


SELECT DEPTNUM, group_concat(NOME order by FUNNUN separator ',') as COLABORADOR FROM FUN GROUP BY DEPTNUM;


SELECT NOME, replace( replace( replace( replace( replace(NOME, 'A', ''), 'E', ''), 'I',''), 'O',''), 'U', '') AS RESULTADO1, SALARIO, REPLACE(SALARIO, 0,'')RESULTADO2 FROM FUN;

/*SELECT NÚMEROS*/

SELECT AVG(SALARIO) AS MEDIA_SALARIAL FROM FUN;


SELECT DEPTNUM, AVG(SALARIO) AS MEDIA_SALARIAL FROM FUN GROUP BY DEPTNUM;


SELECT MIN(SALARIO) AS SALARIO_MINIMO FROM FUN;


SELECT MIN(SALARIO) AS SALARIO_MINIMO, MAX(SALARIO) AS SALARIO_MAXIMO FROM FUN;


SELECT  DEPTNUM, MIN(SALARIO) AS SALARIO_MINIMO, MAX(SALARIO) AS SALARIO_MAXIMO FROM FUN GROUP BY DEPTNUM;


SELECT SUM(SALARIO) FROM FUN;


SELECT DEPTNUM, SUM(SALARIO) AS VALOR FROM FUN GROUP BY DEPTNUM;


SELECT DEPTNUM, SUM(COMISSAO) AS SALARIO_FINAL FROM FUN WHERE DEPTNUM IN (20,30) GROUP BY DEPTNUM;


SELECT COUNT(*) AS TOTAL_FUNCIONARIO FROM FUN;


SELECT DEPTNUM, COUNT(*) FROM FUN GROUP BY DEPTNUM;


SELECT COUNT(COMISSAO) FROM FUN;


SELECT NOME, SALARIO, SUM(SALARIO) OVER (ORDER BY SALARIO, FUNNUN) AS TOTAL FROM FUN ORDER BY 2;


SELECT SALARIO FROM FUN WHERE DEPTNUM = 20 ORDER BY SALARIO;


/*CALCULAR A MODA EM SQL*/
SELECT SALARIO FROM (SELECT SALARIO, dense_rank()over(order by MODA desc) as RANK FROM (SELECT SALARIO, COUNT(*) AS MODA FROM FUN WHERE DEPTNUM = 20 GROUP BY SALARIO) X ) Y WHERE RANK = 1;

/*CALCULAR A MEDIA DE SALARIOS EM SQL*/
SELECT (SUM(CASE WHEN DEPTNUM = 30 THEN SALARIO END)/SUM(SALARIO))*100 AS PORCENTAGEM FROM FUN;


/*NÚMEROS EM SQL*/
SELECT AVG(COALESCE(COMISSAO, 0)) AS MEDIA_COMISSAO FROM FUN WHERE DEPTNUM=30;


SELECT NOME, COMISSAO FROM FUN WHERE DEPTNUM=30 ORDER BY COMISSAO DESC;

/*MÉDIA TRUNCADA*/
SELECT (SUM(SALARIO)-MIN(SALARIO)-MAX(SALARIO))/(COUNT(*)-2) AS MEDIA_TRUNCADA FROM FUN;

SELECT AVG(SALARIO) AS MEDIA_TRUNCADA_V2 FROM FUN WHERE SALARIO NOT IN ((SELECT MIN(SALARIO) FROM FUN), (SELECT MAX(SALARIO) FROM FUN));

/*INSERT SQL*/

INSERT INTO AREA(DEPTNUM, NOME, CIDADE) VALUES (60, 'TI', 'ARAGUAINA');

CREATE TABLE D (id INTEGER DEFAULT 0);

INSERT INTO D VALUES(DEFAULT);

INSERT INTO D (id) VALUES(12);

INSERT INTO TABELA_A (COLUNA2) VALUES('TESTE');

INSERT INTO TABELA_A (ID, COLUNA2) VALUES (20, 'TESTE20');

INSERT INTO A (ID, TESTE) VALUES (NULL, 'TESTE');